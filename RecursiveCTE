A recursive CTE references itself. It returns the result subset, then it repeatedly(recursively) references itself, and stops when it returns all the results.
A recursive CTE has 3 elements:
  a. Non-recursive term: It's a CTE query definition that forms the base result set of the CTE structure. 
  b. Recursive term: One or more CTE query definitions joined with non-recursive term using UNION or UNION ALL operator.
  c. Termination Check: the recursion stops when no rows are returned from previous iteration.

Syntax:

WITH RECURSIVE cte_name AS (
   CTE_query_definition       -- non-recursive term
   UNION ALL
   recursive_query_definition  -- recursive term
)

select * from cte_name ;

// Example of Recursive CTE

WITH RECURSIVE my_CTE AS (
  SELECT 1 as n
  UNION ALL
  SELECT n+1 from my_CTE where n < 3
)

select * from my_CTE ;

// Practical Example
We have employee table having column (emp_id, emp_name, manager_id).

WITH RECURSIVE EmpCTE AS (
  -- Anchor query
  select emp_id, emp_name, manager_id 
  from employees where employee_id = 7

  UNION ALL

  select e.emp_id, e.emp_name, e.manager_id
  from employees e JOIN EmpCTE on e.emp_id = EmpCTE.manager_id


)

select * from EmpCTE ;








